kubernetes:
  name: "dask-{user}-{uuid}"
  namespace: null
  count:
    start: 0
    max: null
  host: "0.0.0.0"
  port: 0
  env: {}
  idle-timeout: null
  deploy-mode: "remote"
  interface: null
  protocol: "tcp://"
  dashboard_address: ":8787"

  scheduler-service-type: "ClusterIP"
  # Timeout to wait for the scheduler service to be up (in seconds)
  # Set it to 0 to wait indefinitely (not recommended)
  scheduler-service-wait-timeout: 30

  scheduler-service-template:
    apiVersion: v1
    kind: Service
    spec:
      selector:
        dask.org/cluster-name: "" # Cluster name will be added automatically
        dask.org/component: scheduler
      ports:
        - name: comm
          protocol: TCP
          port: 8786
          targetPort: 8786
        - name: dashboard
          protocol: TCP
          port: 8787
          targetPort: 8787

  scheduler-pdb-template:
    apiVersion: policy/v1beta1
    kind: PodDisruptionBudget
    spec:
      minAvailable: 1
      selector:
        matchLabels:
          dask.org/cluster-name: "" # Cluster name will be added automatically
          dask.org/component: scheduler

  worker-template-path: null

  scheduler-template:
    {}
    # kind: Pod
    # metadata:
    #   labels:
    #     foo: bar
    #     baz: quux
    # spec:
    #   restartPolicy: Never
    #   containers:
    #   - name: dask
    #     image: daskdev/dask:latest
    #     args:
    #       - dask-scheduler
    #     resources:
    #       limits:
    #         cpu: "1.75"
    #         memory: 6G
    #       requests:
  #         cpu: "1.75"
  #         memory: 6G

  worker-template:
    {}
    # kind: Pod
    # metadata:
    #   labels:
    #     foo: bar
    #     baz: quux
    # spec:
    #   restartPolicy: Never
    #   containers:
    #   - name: dask
    #     image: daskdev/dask:latest
    #     args:
    #       - dask-worker
    #       - --nthreads
    #       - '2'
    #       - --no-bokeh
    #       - --memory-limit
    #       - 6GB
    #       - --death-timeout
    #       - '60'
    #     resources:
    #       limits:
    #         cpu: "1.75"
    #         memory: 6G
    #       requests:
    #         cpu: "1.75"
    #         memory: 6G

# kubeflow specific templates
kubeflow:
  # idicator if kubeflow support is enabled
  enable_kubeflow_support: False

  # templates for istio related resources required by kubeflow
  scheduler-envoyfilter-template:
    apiVersion: <placeholder-api-group>/<placeholder-api-version>
    kind: EnvoyFilter
    metadata:
      name: ${dask-cluster-name}-add-header   # to be filled in
      namespace: ${namespace}  # to be filled in
      labels:
        app: dask
    spec:
      configPatches:
        - applyTo: VIRTUAL_HOST
          match:
            context: SIDECAR_OUTBOUND
            routeConfiguration:
              vhost:
                name: ${dask-cluster-name}.${namespace}.svc.cluster.local:${scheduler-port}  # to be filled in
                route:
                  name: default
          patch:
            operation: MERGE
            value:
              request_headers_to_add:
                - append: true
                  header:
                    key: kubeflow-userid
                    value: kubeflow-user  # TODO ${namespace}

  scheduler-ui-service-template:
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: dask
        dask.org/cluster-name: ${dask-cluster-name}  # to be filled in
        dask.org/component: scheduler
      name: ${dask-cluster-name}     # to be filled in
      namespace: ${namespace}  # to be filled in
    spec:
      ports:
        - name: http-dashboard
          port: 80
          appProtocol: http
          targetPort: 8787
      selector:
        dask.org/cluster-name: ${dask-cluster-name}   # to be filled in
        dask.org/component: scheduler
      sessionAffinity: None
      type: ClusterIP

  scheduler-virtual-service-template:
    apiVersion: networking.istio.io/v1alpha3
    kind: VirtualService
    metadata:
      name: ${dask-cluster-name}  # to be filled in
      namespace: ${namespace}  # to be filled in
    spec:
      gateways:
        - kubeflow/kubeflow-gateway
      hosts:
        - '*'
      http:
        - match:
            - uri:
                prefix: /${dask-cluster-name}/${namespace}/dask/    # TO BE FILLED IN
          rewrite:
            uri: /
          route:
            - destination:
                host:  ${dask-cluster-name}.${namespace}.svc.cluster.local  # TO BE FILLED IN
                port:
                  number: 80
          timeout: 300s
